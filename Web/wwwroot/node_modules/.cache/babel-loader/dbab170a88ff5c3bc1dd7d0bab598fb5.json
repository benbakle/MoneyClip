{"ast":null,"code":"import _classCallCheck from \"C:\\\\dev\\\\MoneyClip\\\\Web\\\\wwwroot\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\dev\\\\MoneyClip\\\\Web\\\\wwwroot\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\dev\\\\MoneyClip\\\\Web\\\\wwwroot\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\dev\\\\MoneyClip\\\\Web\\\\wwwroot\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\dev\\\\MoneyClip\\\\Web\\\\wwwroot\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\dev\\\\MoneyClip\\\\Web\\\\wwwroot\\\\src\\\\components\\\\FetchData.js\";\nimport React, { Component } from 'react';\nexport var FetchData =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FetchData, _Component);\n\n  function FetchData() {\n    var _this;\n\n    _classCallCheck(this, FetchData);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FetchData).call(this));\n    _this.displayName = FetchData.name;\n    _this.state = {\n      forecasts: [],\n      loading: true\n    };\n    fetch('api/SampleData/WeatherForecasts').then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      _this.setState({\n        forecasts: data,\n        loading: false\n      });\n    });\n    return _this;\n  }\n\n  _createClass(FetchData, [{\n    key: \"render\",\n    value: function render() {\n      var contents = this.state.loading ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Loading...\")) : FetchData.renderForecastsTable(this.state.forecasts);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Weather forecast\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"This component demonstrates fetching data from the server.\"), contents);\n    }\n  }], [{\n    key: \"renderForecastsTable\",\n    value: function renderForecastsTable(forecasts) {\n      return React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Temp. (C)\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Temp. (F)\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Summary\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, forecasts.map(function (forecast) {\n        return React.createElement(\"tr\", {\n          key: forecast.dateFormatted,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, forecast.dateFormatted), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, forecast.temperatureC), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, forecast.temperatureF), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, forecast.summary));\n      })));\n    }\n  }]);\n\n  return FetchData;\n}(Component);","map":{"version":3,"sources":["C:\\dev\\MoneyClip\\Web\\wwwroot\\src\\components\\FetchData.js"],"names":["React","Component","FetchData","displayName","name","state","forecasts","loading","fetch","then","response","json","data","setState","contents","renderForecastsTable","map","forecast","dateFormatted","temperatureC","temperatureF","summary"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,WAAaC,SAAb;AAAA;AAAA;AAAA;;AAGE,uBAAc;AAAA;;AAAA;;AACZ;AADY,UAFdC,WAEc,GAFAD,SAAS,CAACE,IAEV;AAEZ,UAAKC,KAAL,GAAa;AAAEC,MAAAA,SAAS,EAAE,EAAb;AAAiBC,MAAAA,OAAO,EAAE;AAA1B,KAAb;AAEAC,IAAAA,KAAK,CAAC,iCAAD,CAAL,CACGC,IADH,CACQ,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADhB,EAEGF,IAFH,CAEQ,UAAAG,IAAI,EAAI;AACZ,YAAKC,QAAL,CAAc;AAAEP,QAAAA,SAAS,EAAEM,IAAb;AAAmBL,QAAAA,OAAO,EAAE;AAA5B,OAAd;AACD,KAJH;AAJY;AASb;;AAZH;AAAA;AAAA,6BAuCW;AACP,UAAIO,QAAQ,GAAG,KAAKT,KAAL,CAAWE,OAAX,GACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAH,CADW,GAEXL,SAAS,CAACa,oBAAV,CAA+B,KAAKV,KAAL,CAAWC,SAA1C,CAFJ;AAIA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEAFF,EAGGQ,QAHH,CADF;AAOD;AAnDH;AAAA;AAAA,yCAc8BR,SAd9B,EAcyC;AACrC,aACE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,CADF,CADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,SAAS,CAACU,GAAV,CAAc,UAAAC,QAAQ;AAAA,eACrB;AAAI,UAAA,GAAG,EAAEA,QAAQ,CAACC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,QAAQ,CAACC,aAAd,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,QAAQ,CAACE,YAAd,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKF,QAAQ,CAACG,YAAd,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKH,QAAQ,CAACI,OAAd,CAJF,CADqB;AAAA,OAAtB,CADH,CATF,CADF;AAsBD;AArCH;;AAAA;AAAA,EAA+BpB,SAA/B","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport class FetchData extends Component {\r\n  displayName = FetchData.name\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = { forecasts: [], loading: true };\r\n\r\n    fetch('api/SampleData/WeatherForecasts')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({ forecasts: data, loading: false });\r\n      });\r\n  }\r\n\r\n  static renderForecastsTable(forecasts) {\r\n    return (\r\n      <table className='table'>\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Temp. (C)</th>\r\n            <th>Temp. (F)</th>\r\n            <th>Summary</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {forecasts.map(forecast =>\r\n            <tr key={forecast.dateFormatted}>\r\n              <td>{forecast.dateFormatted}</td>\r\n              <td>{forecast.temperatureC}</td>\r\n              <td>{forecast.temperatureF}</td>\r\n              <td>{forecast.summary}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let contents = this.state.loading\r\n      ? <p><em>Loading...</em></p>\r\n      : FetchData.renderForecastsTable(this.state.forecasts);\r\n\r\n    return (\r\n      <div>\r\n        <h1>Weather forecast</h1>\r\n        <p>This component demonstrates fetching data from the server.</p>\r\n        {contents}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}